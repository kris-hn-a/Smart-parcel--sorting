#include <iostream>
#include <queue>
#include <string>

using namespace std;

struct Parcel {
    int id;
    string destination;
    double weight;
    int priority;

    bool operator<(const Parcel& other) const {
        return priority > other.priority;
    }
};

int parcelId = 1;
priority_queue<Parcel> parcelQueue;

void addParcel() {
    Parcel p;
    p.id = parcelId++;
    cout << "Enter destination: ";
    cin >> p.destination;
    cout << "Enter weight (kg): ";
    cin >> p.weight;
    cout << "Enter priority (1 = High, 2 = Medium, 3 = Low): ";
    cin >> p.priority;

    parcelQueue.push(p);
    cout << " Parcel added successfully!\n\n";
}

void dispatchParcel() {
    if (parcelQueue.empty()) {
        cout << " No parcels to dispatch.\n\n";
        return;
    }

    Parcel top = parcelQueue.top();
    parcelQueue.pop();
    cout << " Dispatched Parcel ID: " << top.id
         << " | Destination: " << top.destination
         << " | Priority: " << top.priority << "\n\n";
}

void showParcels() {
    if (parcelQueue.empty()) {
        cout << " No parcels in queue.\n\n";
        return;
    }

    priority_queue<Parcel> temp = parcelQueue;
    cout << " Parcels in queue:\n";
    while (!temp.empty()) {
        Parcel p = temp.top(); temp.pop();
        cout << " - ID: " << p.id << " | " << p.destination
             << " | Weight: " << p.weight << " kg | Priority: " << p.priority << '\n';
    }
    cout << '\n';
}

int main() {
    int choice;

    do {
        cout << "==============================\n";
        cout << " Smart Parcel Sorting System\n";
        cout << "==============================\n";
        cout << "1. Add Parcel\n";
        cout << "2. Dispatch Parcel\n";
        cout << "3. Show All Parcels\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: addParcel(); break;
            case 2: dispatchParcel(); break;
            case 3: showParcels(); break;
            case 4: cout << "Exiting...\n"; break;
            default: cout << " Invalid choice. Try again.\n\n";
        }

    } while (choice != 4);

    return 0;
}
